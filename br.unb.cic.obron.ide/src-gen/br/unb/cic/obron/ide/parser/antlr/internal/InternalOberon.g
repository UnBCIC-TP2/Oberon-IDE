/*
 * generated by Xtext 2.25.0
 */
grammar InternalOberon;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.unb.cic.obron.ide.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.unb.cic.obron.ide.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.unb.cic.obron.ide.services.OberonGrammarAccess;

}

@parser::members {

 	private OberonGrammarAccess grammarAccess;

    public InternalOberonParser(TokenStream input, OberonGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Oberon";
   	}

   	@Override
   	protected OberonGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleOberon
entryRuleOberon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOberonRule()); }
	iv_ruleOberon=ruleOberon
	{ $current=$iv_ruleOberon.current; }
	EOF;

// Rule Oberon
ruleOberon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MODULE'
		{
			newLeafNode(otherlv_0, grammarAccess.getOberonAccess().getMODULEKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOberonAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOberonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getOberonAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOberonAccess().getDeclarationDeclarationsParserRuleCall_3_0());
				}
				lv_declaration_3_0=ruleDeclarations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOberonRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_3_0,
						"br.unb.cic.obron.ide.Oberon.Declarations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOberonAccess().getBlockBlockParserRuleCall_4_0());
				}
				lv_block_4_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOberonRule());
					}
					set(
						$current,
						"block",
						lv_block_4_0,
						"br.unb.cic.obron.ide.Oberon.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='END'
		{
			newLeafNode(otherlv_5, grammarAccess.getOberonAccess().getENDKeyword_5());
		}
		this_ID_6=RULE_ID
		{
			newLeafNode(this_ID_6, grammarAccess.getOberonAccess().getIDTerminalRuleCall_6());
		}
		otherlv_7='.'
		{
			newLeafNode(otherlv_7, grammarAccess.getOberonAccess().getFullStopKeyword_7());
		}
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		otherlv_1='BEGIN'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getBEGINKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getStmtStatementParserRuleCall_2_0());
				}
				lv_stmt_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					add(
						$current,
						"stmt",
						lv_stmt_2_0,
						"br.unb.cic.obron.ide.Oberon.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='END'
		{
			newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getENDKeyword_3());
		}
	)
;

// Entry rule entryRuleDeclarations
entryRuleDeclarations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationsRule()); }
	iv_ruleDeclarations=ruleDeclarations
	{ $current=$iv_ruleDeclarations.current; }
	EOF;

// Rule Declarations
ruleDeclarations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeclarationsAccess().getDeclararionAction_0(),
					$current);
			}
		)
		(
			otherlv_1='TYPE'
			{
				newLeafNode(otherlv_1, grammarAccess.getDeclarationsAccess().getTYPEKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarationsAccess().getTypesUserTypeDeclarationParserRuleCall_1_1_0());
					}
					lv_types_2_0=ruleUserTypeDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarationsRule());
						}
						add(
							$current,
							"types",
							lv_types_2_0,
							"br.unb.cic.obron.ide.Oberon.UserTypeDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_3='CONST'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeclarationsAccess().getCONSTKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarationsAccess().getConstsConstantParserRuleCall_2_1_0());
					}
					lv_consts_4_0=ruleConstant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarationsRule());
						}
						add(
							$current,
							"consts",
							lv_consts_4_0,
							"br.unb.cic.obron.ide.Oberon.Constant");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_5='VAR'
			{
				newLeafNode(otherlv_5, grammarAccess.getDeclarationsAccess().getVARKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarationsAccess().getVarsVarDeclarationParserRuleCall_3_1_0());
					}
					lv_vars_6_0=ruleVarDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarationsRule());
						}
						add(
							$current,
							"vars",
							lv_vars_6_0,
							"br.unb.cic.obron.ide.Oberon.VarDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationsAccess().getProcProcedureParserRuleCall_4_0());
				}
				lv_proc_7_0=ruleProcedure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationsRule());
					}
					add(
						$current,
						"proc",
						lv_proc_7_0,
						"br.unb.cic.obron.ide.Oberon.Procedure");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleUserTypeDeclaration
entryRuleUserTypeDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserTypeDeclarationRule()); }
	iv_ruleUserTypeDeclaration=ruleUserTypeDeclaration
	{ $current=$iv_ruleUserTypeDeclaration.current; }
	EOF;

// Rule UserTypeDeclaration
ruleUserTypeDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_nameType_0_0=RULE_ID
					{
						newLeafNode(lv_nameType_0_0, grammarAccess.getUserTypeDeclarationAccess().getNameTypeIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserTypeDeclarationRule());
						}
						setWithLastConsumed(
							$current,
							"nameType",
							lv_nameType_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getUserTypeDeclarationAccess().getEqualsSignKeyword_0_1());
			}
			(
				otherlv_2='ARRAY'
				{
					newLeafNode(otherlv_2, grammarAccess.getUserTypeDeclarationAccess().getARRAYKeyword_0_2_0());
				}
				(
					(
						lv_length_3_0=RULE_INT
						{
							newLeafNode(lv_length_3_0, grammarAccess.getUserTypeDeclarationAccess().getLengthINTTerminalRuleCall_0_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUserTypeDeclarationRule());
							}
							setWithLastConsumed(
								$current,
								"length",
								lv_length_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				otherlv_4='OF'
				{
					newLeafNode(otherlv_4, grammarAccess.getUserTypeDeclarationAccess().getOFKeyword_0_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUserTypeDeclarationAccess().getVartypeOberonTypeParserRuleCall_0_2_3_0());
						}
						lv_vartype_5_0=ruleOberonType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUserTypeDeclarationRule());
							}
							set(
								$current,
								"vartype",
								lv_vartype_5_0,
								"br.unb.cic.obron.ide.Oberon.OberonType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				(
					lv_nameType_6_0=RULE_ID
					{
						newLeafNode(lv_nameType_6_0, grammarAccess.getUserTypeDeclarationAccess().getNameTypeIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserTypeDeclarationRule());
						}
						setWithLastConsumed(
							$current,
							"nameType",
							lv_nameType_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getUserTypeDeclarationAccess().getEqualsSignKeyword_1_1());
			}
			(
				otherlv_8='RECORD'
				{
					newLeafNode(otherlv_8, grammarAccess.getUserTypeDeclarationAccess().getRECORDKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUserTypeDeclarationAccess().getVarsVarDeclarationParserRuleCall_1_2_1_0());
						}
						lv_vars_9_0=ruleVarDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUserTypeDeclarationRule());
							}
							add(
								$current,
								"vars",
								lv_vars_9_0,
								"br.unb.cic.obron.ide.Oberon.VarDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_10='END'
				{
					newLeafNode(otherlv_10, grammarAccess.getUserTypeDeclarationAccess().getENDKeyword_1_2_2());
				}
			)
		)
	)
;

// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current; }
	EOF;

// Rule Constant
ruleConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_constName_0_0=RULE_ID
				{
					newLeafNode(lv_constName_0_0, grammarAccess.getConstantAccess().getConstNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstantRule());
					}
					setWithLastConsumed(
						$current,
						"constName",
						lv_constName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getConstantAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"br.unb.cic.obron.ide.Oberon.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getConstantAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleVarDeclaration
entryRuleVarDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclarationRule()); }
	iv_ruleVarDeclaration=ruleVarDeclaration
	{ $current=$iv_ruleVarDeclaration.current; }
	EOF;

// Rule VarDeclaration
ruleVarDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_vars_0_0=RULE_ID
					{
						newLeafNode(lv_vars_0_0, grammarAccess.getVarDeclarationAccess().getVarsIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarDeclarationRule());
						}
						addWithLastConsumed(
							$current,
							"vars",
							lv_vars_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getVarDeclarationAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						lv_vars_2_0=RULE_ID
						{
							newLeafNode(lv_vars_2_0, grammarAccess.getVarDeclarationAccess().getVarsIDTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVarDeclarationRule());
							}
							addWithLastConsumed(
								$current,
								"vars",
								lv_vars_2_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getVarDeclarationAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclarationAccess().getVarTypeOberonTypeParserRuleCall_2_0());
				}
				lv_varType_4_0=ruleOberonType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclarationRule());
					}
					set(
						$current,
						"varType",
						lv_varType_4_0,
						"br.unb.cic.obron.ide.Oberon.OberonType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleProcedure
entryRuleProcedure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcedureRule()); }
	iv_ruleProcedure=ruleProcedure
	{ $current=$iv_ruleProcedure.current; }
	EOF;

// Rule Procedure
ruleProcedure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PROCEDURE'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcedureAccess().getPROCEDUREKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcedureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureAccess().getFormalsFormalsParserRuleCall_3_0());
				}
				lv_formals_3_0=ruleFormals
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureRule());
					}
					set(
						$current,
						"formals",
						lv_formals_3_0,
						"br.unb.cic.obron.ide.Oberon.Formals");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getProcedureAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getProcedureAccess().getColonKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcedureAccess().getProcedureTypeOberonTypeParserRuleCall_5_1_0());
					}
					lv_procedureType_6_0=ruleOberonType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcedureRule());
						}
						set(
							$current,
							"procedureType",
							lv_procedureType_6_0,
							"br.unb.cic.obron.ide.Oberon.OberonType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getProcedureAccess().getSemicolonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureAccess().getDeclDeclarationsParserRuleCall_7_0());
				}
				lv_decl_8_0=ruleDeclarations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureRule());
					}
					set(
						$current,
						"decl",
						lv_decl_8_0,
						"br.unb.cic.obron.ide.Oberon.Declarations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureAccess().getBlockBlockParserRuleCall_8_0());
				}
				lv_block_9_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureRule());
					}
					set(
						$current,
						"block",
						lv_block_9_0,
						"br.unb.cic.obron.ide.Oberon.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_ID_10=RULE_ID
		{
			newLeafNode(this_ID_10, grammarAccess.getProcedureAccess().getIDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleFormals
entryRuleFormals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormalsRule()); }
	iv_ruleFormals=ruleFormals
	{ $current=$iv_ruleFormals.current; }
	EOF;

// Rule Formals
ruleFormals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalsAccess().getArgFormalArgParserRuleCall_0_0());
				}
				lv_arg_0_0=ruleFormalArg
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalsRule());
					}
					set(
						$current,
						"arg",
						lv_arg_0_0,
						"br.unb.cic.obron.ide.Oberon.FormalArg");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getFormalsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFormalsAccess().getArgsFormalArgParserRuleCall_1_1_0());
					}
					lv_args_2_0=ruleFormalArg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFormalsRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"br.unb.cic.obron.ide.Oberon.FormalArg");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFormalArg
entryRuleFormalArg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormalArgRule()); }
	iv_ruleFormalArg=ruleFormalArg
	{ $current=$iv_ruleFormalArg.current; }
	EOF;

// Rule FormalArg
ruleFormalArg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_args_0_0=RULE_ID
					{
						newLeafNode(lv_args_0_0, grammarAccess.getFormalArgAccess().getArgsIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFormalArgRule());
						}
						addWithLastConsumed(
							$current,
							"args",
							lv_args_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getFormalArgAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						lv_args_2_0=RULE_ID
						{
							newLeafNode(lv_args_2_0, grammarAccess.getFormalArgAccess().getArgsIDTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFormalArgRule());
							}
							addWithLastConsumed(
								$current,
								"args",
								lv_args_2_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getFormalArgAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalArgAccess().getArgTypeOberonTypeParserRuleCall_2_0());
				}
				lv_argType_4_0=ruleOberonType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalArgRule());
					}
					set(
						$current,
						"argType",
						lv_argType_4_0,
						"br.unb.cic.obron.ide.Oberon.OberonType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArguments
entryRuleArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_ruleArguments=ruleArguments
	{ $current=$iv_ruleArguments.current; }
	EOF;

// Rule Arguments
ruleArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentsAccess().getExpExpressionParserRuleCall_0_0());
				}
				lv_exp_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentsRule());
					}
					set(
						$current,
						"exp",
						lv_exp_0_0,
						"br.unb.cic.obron.ide.Oberon.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgumentsAccess().getExpsExpressionParserRuleCall_1_1_0());
					}
					lv_exps_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgumentsRule());
						}
						add(
							$current,
							"exps",
							lv_exps_2_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getLeftTExpressionParserRuleCall_0_0());
				}
				lv_left_0_0=ruleTExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"br.unb.cic.obron.ide.Oberon.TExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getOprOperationParserRuleCall_1_0_0());
					}
					lv_opr_1_0=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						add(
							$current,
							"opr",
							lv_opr_1_0,
							"br.unb.cic.obron.ide.Oberon.Operation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_1_0());
					}
					lv_right_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						add(
							$current,
							"right",
							lv_right_2_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_OperationRelacional_0_1='='
					{
						newLeafNode(lv_OperationRelacional_0_1, grammarAccess.getOperationAccess().getOperationRelacionalEqualsSignKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationRelacional", lv_OperationRelacional_0_1, null);
					}
					    |
					lv_OperationRelacional_0_2='#'
					{
						newLeafNode(lv_OperationRelacional_0_2, grammarAccess.getOperationAccess().getOperationRelacionalNumberSignKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationRelacional", lv_OperationRelacional_0_2, null);
					}
					    |
					lv_OperationRelacional_0_3='<'
					{
						newLeafNode(lv_OperationRelacional_0_3, grammarAccess.getOperationAccess().getOperationRelacionalLessThanSignKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationRelacional", lv_OperationRelacional_0_3, null);
					}
					    |
					lv_OperationRelacional_0_4='<='
					{
						newLeafNode(lv_OperationRelacional_0_4, grammarAccess.getOperationAccess().getOperationRelacionalLessThanSignEqualsSignKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationRelacional", lv_OperationRelacional_0_4, null);
					}
					    |
					lv_OperationRelacional_0_5='>'
					{
						newLeafNode(lv_OperationRelacional_0_5, grammarAccess.getOperationAccess().getOperationRelacionalGreaterThanSignKeyword_0_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationRelacional", lv_OperationRelacional_0_5, null);
					}
					    |
					lv_OperationRelacional_0_6='>='
					{
						newLeafNode(lv_OperationRelacional_0_6, grammarAccess.getOperationAccess().getOperationRelacionalGreaterThanSignEqualsSignKeyword_0_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationRelacional", lv_OperationRelacional_0_6, null);
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_OperationAritmetic_1_1='*'
					{
						newLeafNode(lv_OperationAritmetic_1_1, grammarAccess.getOperationAccess().getOperationAritmeticAsteriskKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationAritmetic", lv_OperationAritmetic_1_1, null);
					}
					    |
					lv_OperationAritmetic_1_2='/'
					{
						newLeafNode(lv_OperationAritmetic_1_2, grammarAccess.getOperationAccess().getOperationAritmeticSolidusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationAritmetic", lv_OperationAritmetic_1_2, null);
					}
					    |
					lv_OperationAritmetic_1_3='+'
					{
						newLeafNode(lv_OperationAritmetic_1_3, grammarAccess.getOperationAccess().getOperationAritmeticPlusSignKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationAritmetic", lv_OperationAritmetic_1_3, null);
					}
					    |
					lv_OperationAritmetic_1_4='-'
					{
						newLeafNode(lv_OperationAritmetic_1_4, grammarAccess.getOperationAccess().getOperationAritmeticHyphenMinusKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationAritmetic", lv_OperationAritmetic_1_4, null);
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_OperationLogic_2_1='&&'
					{
						newLeafNode(lv_OperationLogic_2_1, grammarAccess.getOperationAccess().getOperationLogicAmpersandAmpersandKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationLogic", lv_OperationLogic_2_1, null);
					}
					    |
					lv_OperationLogic_2_2='||'
					{
						newLeafNode(lv_OperationLogic_2_2, grammarAccess.getOperationAccess().getOperationLogicVerticalLineVerticalLineKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "OperationLogic", lv_OperationLogic_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTExpression
entryRuleTExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTExpressionRule()); }
	iv_ruleTExpression=ruleTExpression
	{ $current=$iv_ruleTExpression.current; }
	EOF;

// Rule TExpression
ruleTExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getTExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTExpressionAccess().getExpExpressionParserRuleCall_0_1_0());
					}
					lv_exp_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTExpressionRule());
						}
						set(
							$current,
							"exp",
							lv_exp_1_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getTExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTExpressionAccess().getIntvalueIntValueParserRuleCall_1_0());
				}
				lv_intvalue_3_0=ruleIntValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTExpressionRule());
					}
					set(
						$current,
						"intvalue",
						lv_intvalue_3_0,
						"br.unb.cic.obron.ide.Oberon.IntValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTExpressionAccess().getBoolvalueBoolValueParserRuleCall_2_0());
				}
				lv_boolvalue_4_0=ruleBoolValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTExpressionRule());
					}
					set(
						$current,
						"boolvalue",
						lv_boolvalue_4_0,
						"br.unb.cic.obron.ide.Oberon.BoolValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getTExpressionAccess().getNameIDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_6='('
				{
					newLeafNode(otherlv_6, grammarAccess.getTExpressionAccess().getLeftParenthesisKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTExpressionAccess().getArgsArgumentsParserRuleCall_3_1_1_0());
						}
						lv_args_7_0=ruleArguments
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTExpressionRule());
							}
							add(
								$current,
								"args",
								lv_args_7_0,
								"br.unb.cic.obron.ide.Oberon.Arguments");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_8=')'
				{
					newLeafNode(otherlv_8, grammarAccess.getTExpressionAccess().getRightParenthesisKeyword_3_1_2());
				}
			)?
			(
				otherlv_9='.'
				{
					newLeafNode(otherlv_9, grammarAccess.getTExpressionAccess().getFullStopKeyword_3_2_0());
				}
				(
					(
						lv_atribs_10_0=RULE_ID
						{
							newLeafNode(lv_atribs_10_0, grammarAccess.getTExpressionAccess().getAtribsIDTerminalRuleCall_3_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTExpressionRule());
							}
							addWithLastConsumed(
								$current,
								"atribs",
								lv_atribs_10_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
			(
				otherlv_11='['
				{
					newLeafNode(otherlv_11, grammarAccess.getTExpressionAccess().getLeftSquareBracketKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTExpressionAccess().getIndexExpressionParserRuleCall_3_3_1_0());
						}
						lv_index_12_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTExpressionRule());
							}
							add(
								$current,
								"index",
								lv_index_12_0,
								"br.unb.cic.obron.ide.Oberon.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_13=']'
				{
					newLeafNode(otherlv_13, grammarAccess.getTExpressionAccess().getRightSquareBracketKeyword_3_3_2());
				}
			)*
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getStmtTStatementParserRuleCall_0_0());
				}
				lv_stmt_0_0=ruleTStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"stmt",
						lv_stmt_0_0,
						"br.unb.cic.obron.ide.Oberon.TStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getStmtsStatementParserRuleCall_1_1_0());
					}
					lv_stmts_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						add(
							$current,
							"stmts",
							lv_stmts_2_0,
							"br.unb.cic.obron.ide.Oberon.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTStatement
entryRuleTStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTStatementRule()); }
	iv_ruleTStatement=ruleTStatement
	{ $current=$iv_ruleTStatement.current; }
	EOF;

// Rule TStatement
ruleTStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getDesDesignatorParserRuleCall_0_0_0());
					}
					lv_des_0_0=ruleDesignator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"des",
							lv_des_0_0,
							"br.unb.cic.obron.ide.Oberon.Designator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1=':='
				{
					newLeafNode(otherlv_1, grammarAccess.getTStatementAccess().getColonEqualsSignKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTStatementAccess().getExpExpressionParserRuleCall_0_1_1_0());
						}
						lv_exp_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTStatementRule());
							}
							set(
								$current,
								"exp",
								lv_exp_2_0,
								"br.unb.cic.obron.ide.Oberon.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			otherlv_3='readInt'
			{
				newLeafNode(otherlv_3, grammarAccess.getTStatementAccess().getReadIntKeyword_1_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getTStatementAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					lv_var_5_0=RULE_ID
					{
						newLeafNode(lv_var_5_0, grammarAccess.getTStatementAccess().getVarIDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTStatementRule());
						}
						setWithLastConsumed(
							$current,
							"var",
							lv_var_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getTStatementAccess().getRightParenthesisKeyword_1_3());
			}
		)
		    |
		(
			otherlv_7='write'
			{
				newLeafNode(otherlv_7, grammarAccess.getTStatementAccess().getWriteKeyword_2_0());
			}
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getTStatementAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getExpExpressionParserRuleCall_2_2_0());
					}
					lv_exp_9_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"exp",
							lv_exp_9_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getTStatementAccess().getRightParenthesisKeyword_2_3());
			}
		)
		    |
		(
			otherlv_11='IF'
			{
				newLeafNode(otherlv_11, grammarAccess.getTStatementAccess().getIFKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getCondExpressionParserRuleCall_3_1_0());
					}
					lv_cond_12_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"cond",
							lv_cond_12_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13='THEN'
			{
				newLeafNode(otherlv_13, grammarAccess.getTStatementAccess().getTHENKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getThenStmtStatementParserRuleCall_3_3_0());
					}
					lv_thenStmt_14_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"thenStmt",
							lv_thenStmt_14_0,
							"br.unb.cic.obron.ide.Oberon.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15='ELSIF'
				{
					newLeafNode(otherlv_15, grammarAccess.getTStatementAccess().getELSIFKeyword_3_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTStatementAccess().getElsifsElseIfStmtParserRuleCall_3_4_1_0());
						}
						lv_elsifs_16_0=ruleelseIfStmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTStatementRule());
							}
							add(
								$current,
								"elsifs",
								lv_elsifs_16_0,
								"br.unb.cic.obron.ide.Oberon.elseIfStmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_17='ELSE'
				{
					newLeafNode(otherlv_17, grammarAccess.getTStatementAccess().getELSEKeyword_3_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTStatementAccess().getElseStmtStatementParserRuleCall_3_5_1_0());
						}
						lv_elseStmt_18_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTStatementRule());
							}
							set(
								$current,
								"elseStmt",
								lv_elseStmt_18_0,
								"br.unb.cic.obron.ide.Oberon.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_19='END'
			{
				newLeafNode(otherlv_19, grammarAccess.getTStatementAccess().getENDKeyword_3_6());
			}
		)
		    |
		(
			otherlv_20='WHILE'
			{
				newLeafNode(otherlv_20, grammarAccess.getTStatementAccess().getWHILEKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getCondExpressionParserRuleCall_4_1_0());
					}
					lv_cond_21_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"cond",
							lv_cond_21_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22='DO'
			{
				newLeafNode(otherlv_22, grammarAccess.getTStatementAccess().getDOKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getStmtStatementParserRuleCall_4_3_0());
					}
					lv_stmt_23_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"stmt",
							lv_stmt_23_0,
							"br.unb.cic.obron.ide.Oberon.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_24='END'
			{
				newLeafNode(otherlv_24, grammarAccess.getTStatementAccess().getENDKeyword_4_4());
			}
		)
		    |
		(
			otherlv_25='REPEAT'
			{
				newLeafNode(otherlv_25, grammarAccess.getTStatementAccess().getREPEATKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getStmtStatementParserRuleCall_5_1_0());
					}
					lv_stmt_26_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"stmt",
							lv_stmt_26_0,
							"br.unb.cic.obron.ide.Oberon.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_27='UNTIL'
			{
				newLeafNode(otherlv_27, grammarAccess.getTStatementAccess().getUNTILKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getCondExpressionParserRuleCall_5_3_0());
					}
					lv_cond_28_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"cond",
							lv_cond_28_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_29='FOR'
			{
				newLeafNode(otherlv_29, grammarAccess.getTStatementAccess().getFORKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getInitStatementParserRuleCall_6_1_0());
					}
					lv_init_30_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"init",
							lv_init_30_0,
							"br.unb.cic.obron.ide.Oberon.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_31='TO'
			{
				newLeafNode(otherlv_31, grammarAccess.getTStatementAccess().getTOKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getConditionExpressionParserRuleCall_6_3_0());
					}
					lv_condition_32_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"condition",
							lv_condition_32_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_33='DO'
			{
				newLeafNode(otherlv_33, grammarAccess.getTStatementAccess().getDOKeyword_6_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getStmtStatementParserRuleCall_6_5_0());
					}
					lv_stmt_34_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"stmt",
							lv_stmt_34_0,
							"br.unb.cic.obron.ide.Oberon.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_35='END'
			{
				newLeafNode(otherlv_35, grammarAccess.getTStatementAccess().getENDKeyword_6_6());
			}
		)
		    |
		(
			otherlv_36='FOR'
			{
				newLeafNode(otherlv_36, grammarAccess.getTStatementAccess().getFORKeyword_7_0());
			}
			(
				(
					lv_var_37_0=RULE_ID
					{
						newLeafNode(lv_var_37_0, grammarAccess.getTStatementAccess().getVarIDTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTStatementRule());
						}
						setWithLastConsumed(
							$current,
							"var",
							lv_var_37_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_38='IN'
			{
				newLeafNode(otherlv_38, grammarAccess.getTStatementAccess().getINKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getMinExpressionParserRuleCall_7_3_0());
					}
					lv_min_39_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"min",
							lv_min_39_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_40='..'
			{
				newLeafNode(otherlv_40, grammarAccess.getTStatementAccess().getFullStopFullStopKeyword_7_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getMaxExpressionParserRuleCall_7_5_0());
					}
					lv_max_41_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"max",
							lv_max_41_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_42='DO'
			{
				newLeafNode(otherlv_42, grammarAccess.getTStatementAccess().getDOKeyword_7_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getStmtStatementParserRuleCall_7_7_0());
					}
					lv_stmt_43_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"stmt",
							lv_stmt_43_0,
							"br.unb.cic.obron.ide.Oberon.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_44='END'
			{
				newLeafNode(otherlv_44, grammarAccess.getTStatementAccess().getENDKeyword_7_8());
			}
		)
		    |
		(
			otherlv_45='LOOP'
			{
				newLeafNode(otherlv_45, grammarAccess.getTStatementAccess().getLOOPKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getStmtStatementParserRuleCall_8_1_0());
					}
					lv_stmt_46_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"stmt",
							lv_stmt_46_0,
							"br.unb.cic.obron.ide.Oberon.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_47='END'
			{
				newLeafNode(otherlv_47, grammarAccess.getTStatementAccess().getENDKeyword_8_2());
			}
		)
		    |
		(
			otherlv_48='RETURN'
			{
				newLeafNode(otherlv_48, grammarAccess.getTStatementAccess().getRETURNKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getExpExpressionParserRuleCall_9_1_0());
					}
					lv_exp_49_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"exp",
							lv_exp_49_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_50='CASE'
			{
				newLeafNode(otherlv_50, grammarAccess.getTStatementAccess().getCASEKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getExpExpressionParserRuleCall_10_1_0());
					}
					lv_exp_51_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"exp",
							lv_exp_51_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_52='OF'
			{
				newLeafNode(otherlv_52, grammarAccess.getTStatementAccess().getOFKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTStatementAccess().getCaseCaseAlternativeParserRuleCall_10_3_0());
					}
					lv_case_53_0=rulecaseAlternative
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTStatementRule());
						}
						set(
							$current,
							"case",
							lv_case_53_0,
							"br.unb.cic.obron.ide.Oberon.caseAlternative");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_54='|'
				{
					newLeafNode(otherlv_54, grammarAccess.getTStatementAccess().getVerticalLineKeyword_10_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTStatementAccess().getCasesCaseAlternativeParserRuleCall_10_4_1_0());
						}
						lv_cases_55_0=rulecaseAlternative
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTStatementRule());
							}
							add(
								$current,
								"cases",
								lv_cases_55_0,
								"br.unb.cic.obron.ide.Oberon.caseAlternative");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_56='ELSE'
				{
					newLeafNode(otherlv_56, grammarAccess.getTStatementAccess().getELSEKeyword_10_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTStatementAccess().getElseStmtStatementParserRuleCall_10_5_1_0());
						}
						lv_elseStmt_57_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTStatementRule());
							}
							set(
								$current,
								"elseStmt",
								lv_elseStmt_57_0,
								"br.unb.cic.obron.ide.Oberon.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_58='END'
			{
				newLeafNode(otherlv_58, grammarAccess.getTStatementAccess().getENDKeyword_10_6());
			}
		)
		    |
		(
			(
				lv_exit_59_0='EXIT'
				{
					newLeafNode(lv_exit_59_0, grammarAccess.getTStatementAccess().getExitEXITKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTStatementRule());
					}
					setWithLastConsumed($current, "exit", lv_exit_59_0, "EXIT");
				}
			)
		)
	)
;

// Entry rule entryRuleDesignator
entryRuleDesignator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesignatorRule()); }
	iv_ruleDesignator=ruleDesignator
	{ $current=$iv_ruleDesignator.current; }
	EOF;

// Rule Designator
ruleDesignator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDesignatorAccess().getDesignatorTDesignatorParserRuleCall_0_0());
				}
				lv_designator_0_0=ruleTDesignator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesignatorRule());
					}
					set(
						$current,
						"designator",
						lv_designator_0_0,
						"br.unb.cic.obron.ide.Oberon.TDesignator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getDesignatorAccess().getLeftSquareBracketKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDesignatorAccess().getIndexesExpressionParserRuleCall_1_0_1_0());
						}
						lv_indexes_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDesignatorRule());
							}
							add(
								$current,
								"indexes",
								lv_indexes_2_0,
								"br.unb.cic.obron.ide.Oberon.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=']'
				{
					newLeafNode(otherlv_3, grammarAccess.getDesignatorAccess().getRightSquareBracketKeyword_1_0_2());
				}
			)
			    |
			(
				otherlv_4='.'
				{
					newLeafNode(otherlv_4, grammarAccess.getDesignatorAccess().getFullStopKeyword_1_1_0());
				}
				(
					(
						lv_atribs_5_0=RULE_ID
						{
							newLeafNode(lv_atribs_5_0, grammarAccess.getDesignatorAccess().getAtribsIDTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDesignatorRule());
							}
							addWithLastConsumed(
								$current,
								"atribs",
								lv_atribs_5_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleTDesignator
entryRuleTDesignator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTDesignatorRule()); }
	iv_ruleTDesignator=ruleTDesignator
	{ $current=$iv_ruleTDesignator.current; }
	EOF;

// Rule TDesignator
ruleTDesignator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTDesignatorAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTDesignatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getTDesignatorAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTDesignatorAccess().getArgsArgumentsParserRuleCall_1_1_0());
					}
					lv_args_2_0=ruleArguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTDesignatorRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"br.unb.cic.obron.ide.Oberon.Arguments");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getTDesignatorAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRulecaseAlternative
entryRulecaseAlternative returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseAlternativeRule()); }
	iv_rulecaseAlternative=rulecaseAlternative
	{ $current=$iv_rulecaseAlternative.current; }
	EOF;

// Rule caseAlternative
rulecaseAlternative returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseAlternativeAccess().getExpExpressionParserRuleCall_0_0());
				}
				lv_exp_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseAlternativeRule());
					}
					set(
						$current,
						"exp",
						lv_exp_0_0,
						"br.unb.cic.obron.ide.Oberon.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='..'
			{
				newLeafNode(otherlv_1, grammarAccess.getCaseAlternativeAccess().getFullStopFullStopKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseAlternativeAccess().getMaxExpressionParserRuleCall_1_1_0());
					}
					lv_max_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseAlternativeRule());
						}
						set(
							$current,
							"max",
							lv_max_2_0,
							"br.unb.cic.obron.ide.Oberon.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getCaseAlternativeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseAlternativeAccess().getStmtStatementParserRuleCall_3_0());
				}
				lv_stmt_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseAlternativeRule());
					}
					set(
						$current,
						"stmt",
						lv_stmt_4_0,
						"br.unb.cic.obron.ide.Oberon.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleelseIfStmt
entryRuleelseIfStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseIfStmtRule()); }
	iv_ruleelseIfStmt=ruleelseIfStmt
	{ $current=$iv_ruleelseIfStmt.current; }
	EOF;

// Rule elseIfStmt
ruleelseIfStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElseIfStmtAccess().getCondExpressionParserRuleCall_0_0());
				}
				lv_cond_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseIfStmtRule());
					}
					set(
						$current,
						"cond",
						lv_cond_0_0,
						"br.unb.cic.obron.ide.Oberon.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='THEN'
		{
			newLeafNode(otherlv_1, grammarAccess.getElseIfStmtAccess().getTHENKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseIfStmtAccess().getStmtStatementParserRuleCall_2_0());
				}
				lv_stmt_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseIfStmtRule());
					}
					set(
						$current,
						"stmt",
						lv_stmt_2_0,
						"br.unb.cic.obron.ide.Oberon.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOberonType
entryRuleOberonType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOberonTypeRule()); }
	iv_ruleOberonType=ruleOberonType
	{ $current=$iv_ruleOberonType.current; }
	EOF;

// Rule OberonType
ruleOberonType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOberonTypeAccess().getIntegerAction_0_0(),
						$current);
				}
			)
			otherlv_1='INTEGER'
			{
				newLeafNode(otherlv_1, grammarAccess.getOberonTypeAccess().getINTEGERKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOberonTypeAccess().getBooleanAction_1_0(),
						$current);
				}
			)
			otherlv_3='BOOLEAN'
			{
				newLeafNode(otherlv_3, grammarAccess.getOberonTypeAccess().getBOOLEANKeyword_1_1());
			}
		)
		    |
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getOberonTypeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOberonTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			otherlv_5='ARRAY'
			{
				newLeafNode(otherlv_5, grammarAccess.getOberonTypeAccess().getARRAYKeyword_3_0());
			}
			(
				(
					lv_numElement_6_0=RULE_INT
					{
						newLeafNode(lv_numElement_6_0, grammarAccess.getOberonTypeAccess().getNumElementINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOberonTypeRule());
						}
						setWithLastConsumed(
							$current,
							"numElement",
							lv_numElement_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_7='OF'
			{
				newLeafNode(otherlv_7, grammarAccess.getOberonTypeAccess().getOFKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOberonTypeAccess().getNameTypeOberonTypeParserRuleCall_3_3_0());
					}
					lv_nameType_8_0=ruleOberonType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOberonTypeRule());
						}
						set(
							$current,
							"nameType",
							lv_nameType_8_0,
							"br.unb.cic.obron.ide.Oberon.OberonType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleIntValue
entryRuleIntValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntValueRule()); }
	iv_ruleIntValue=ruleIntValue
	{ $current=$iv_ruleIntValue.current.getText(); }
	EOF;

// Rule IntValue
ruleIntValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getIntValueAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleBoolValue
entryRuleBoolValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBoolValueRule()); }
	iv_ruleBoolValue=ruleBoolValue
	{ $current=$iv_ruleBoolValue.current.getText(); }
	EOF;

// Rule BoolValue
ruleBoolValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBoolValueAccess().getTRUEParserRuleCall_0());
		}
		this_TRUE_0=ruleTRUE
		{
			$current.merge(this_TRUE_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoolValueAccess().getFALSEParserRuleCall_1());
		}
		this_FALSE_1=ruleFALSE
		{
			$current.merge(this_FALSE_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTRUE
entryRuleTRUE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTRUERule()); }
	iv_ruleTRUE=ruleTRUE
	{ $current=$iv_ruleTRUE.current.getText(); }
	EOF;

// Rule TRUE
ruleTRUE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='True'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getTRUEAccess().getTrueKeyword());
	}
;

// Entry rule entryRuleFALSE
entryRuleFALSE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFALSERule()); }
	iv_ruleFALSE=ruleFALSE
	{ $current=$iv_ruleFALSE.current.getText(); }
	EOF;

// Rule FALSE
ruleFALSE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='False'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getFALSEAccess().getFalseKeyword());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
