/**
 * generated by Xtext 2.25.0
 */
package br.unb.cic.obron.ide.oberon;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getStmt <em>Stmt</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getStmts <em>Stmts</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getDes <em>Des</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getExp <em>Exp</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getVar <em>Var</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getCond <em>Cond</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getThenStmt <em>Then Stmt</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getElsifs <em>Elsifs</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getElseStmt <em>Else Stmt</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getInit <em>Init</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getCondition <em>Condition</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getMin <em>Min</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getMax <em>Max</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getCase <em>Case</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getCases <em>Cases</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.Statement#getExit <em>Exit</em>}</li>
 * </ul>
 *
 * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement()
 * @model
 * @generated
 */
public interface Statement extends EObject
{
  /**
   * Returns the value of the '<em><b>Stmt</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Stmt</em>' containment reference.
   * @see #setStmt(Statement)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Stmt()
   * @model containment="true"
   * @generated
   */
  Statement getStmt();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getStmt <em>Stmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Stmt</em>' containment reference.
   * @see #getStmt()
   * @generated
   */
  void setStmt(Statement value);

  /**
   * Returns the value of the '<em><b>Stmts</b></em>' containment reference list.
   * The list contents are of type {@link br.unb.cic.obron.ide.oberon.Statement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Stmts</em>' containment reference list.
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Stmts()
   * @model containment="true"
   * @generated
   */
  EList<Statement> getStmts();

  /**
   * Returns the value of the '<em><b>Des</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Des</em>' containment reference.
   * @see #setDes(Designator)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Des()
   * @model containment="true"
   * @generated
   */
  Designator getDes();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getDes <em>Des</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Des</em>' containment reference.
   * @see #getDes()
   * @generated
   */
  void setDes(Designator value);

  /**
   * Returns the value of the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exp</em>' containment reference.
   * @see #setExp(Expression)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Exp()
   * @model containment="true"
   * @generated
   */
  Expression getExp();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getExp <em>Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exp</em>' containment reference.
   * @see #getExp()
   * @generated
   */
  void setExp(Expression value);

  /**
   * Returns the value of the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Var</em>' attribute.
   * @see #setVar(String)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Var()
   * @model
   * @generated
   */
  String getVar();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getVar <em>Var</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Var</em>' attribute.
   * @see #getVar()
   * @generated
   */
  void setVar(String value);

  /**
   * Returns the value of the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cond</em>' containment reference.
   * @see #setCond(Expression)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Cond()
   * @model containment="true"
   * @generated
   */
  Expression getCond();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getCond <em>Cond</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cond</em>' containment reference.
   * @see #getCond()
   * @generated
   */
  void setCond(Expression value);

  /**
   * Returns the value of the '<em><b>Then Stmt</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Then Stmt</em>' containment reference.
   * @see #setThenStmt(Statement)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_ThenStmt()
   * @model containment="true"
   * @generated
   */
  Statement getThenStmt();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getThenStmt <em>Then Stmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Then Stmt</em>' containment reference.
   * @see #getThenStmt()
   * @generated
   */
  void setThenStmt(Statement value);

  /**
   * Returns the value of the '<em><b>Elsifs</b></em>' containment reference list.
   * The list contents are of type {@link br.unb.cic.obron.ide.oberon.elseIfStmt}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Elsifs</em>' containment reference list.
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Elsifs()
   * @model containment="true"
   * @generated
   */
  EList<elseIfStmt> getElsifs();

  /**
   * Returns the value of the '<em><b>Else Stmt</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Else Stmt</em>' containment reference.
   * @see #setElseStmt(Statement)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_ElseStmt()
   * @model containment="true"
   * @generated
   */
  Statement getElseStmt();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getElseStmt <em>Else Stmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Else Stmt</em>' containment reference.
   * @see #getElseStmt()
   * @generated
   */
  void setElseStmt(Statement value);

  /**
   * Returns the value of the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Init</em>' containment reference.
   * @see #setInit(Statement)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Init()
   * @model containment="true"
   * @generated
   */
  Statement getInit();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getInit <em>Init</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Init</em>' containment reference.
   * @see #getInit()
   * @generated
   */
  void setInit(Statement value);

  /**
   * Returns the value of the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Condition</em>' containment reference.
   * @see #setCondition(Expression)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Condition()
   * @model containment="true"
   * @generated
   */
  Expression getCondition();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getCondition <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Condition</em>' containment reference.
   * @see #getCondition()
   * @generated
   */
  void setCondition(Expression value);

  /**
   * Returns the value of the '<em><b>Min</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Min</em>' containment reference.
   * @see #setMin(Expression)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Min()
   * @model containment="true"
   * @generated
   */
  Expression getMin();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getMin <em>Min</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Min</em>' containment reference.
   * @see #getMin()
   * @generated
   */
  void setMin(Expression value);

  /**
   * Returns the value of the '<em><b>Max</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max</em>' containment reference.
   * @see #setMax(Expression)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Max()
   * @model containment="true"
   * @generated
   */
  Expression getMax();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getMax <em>Max</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max</em>' containment reference.
   * @see #getMax()
   * @generated
   */
  void setMax(Expression value);

  /**
   * Returns the value of the '<em><b>Case</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Case</em>' containment reference.
   * @see #setCase(caseAlternative)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Case()
   * @model containment="true"
   * @generated
   */
  caseAlternative getCase();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getCase <em>Case</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Case</em>' containment reference.
   * @see #getCase()
   * @generated
   */
  void setCase(caseAlternative value);

  /**
   * Returns the value of the '<em><b>Cases</b></em>' containment reference list.
   * The list contents are of type {@link br.unb.cic.obron.ide.oberon.caseAlternative}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cases</em>' containment reference list.
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Cases()
   * @model containment="true"
   * @generated
   */
  EList<caseAlternative> getCases();

  /**
   * Returns the value of the '<em><b>Exit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exit</em>' attribute.
   * @see #setExit(String)
   * @see br.unb.cic.obron.ide.oberon.OberonPackage#getStatement_Exit()
   * @model
   * @generated
   */
  String getExit();

  /**
   * Sets the value of the '{@link br.unb.cic.obron.ide.oberon.Statement#getExit <em>Exit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exit</em>' attribute.
   * @see #getExit()
   * @generated
   */
  void setExit(String value);

} // Statement
