/**
 * generated by Xtext 2.25.0
 */
package br.unb.cic.obron.ide.oberon.impl;

import br.unb.cic.obron.ide.oberon.Constant;
import br.unb.cic.obron.ide.oberon.Declararion;
import br.unb.cic.obron.ide.oberon.OberonPackage;
import br.unb.cic.obron.ide.oberon.Procedure;
import br.unb.cic.obron.ide.oberon.UserTypeDeclaration;
import br.unb.cic.obron.ide.oberon.VarDeclaration;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Declararion</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.unb.cic.obron.ide.oberon.impl.DeclararionImpl#getTypes <em>Types</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.impl.DeclararionImpl#getConsts <em>Consts</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.impl.DeclararionImpl#getVars <em>Vars</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.impl.DeclararionImpl#getProc <em>Proc</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeclararionImpl extends DeclarationsImpl implements Declararion
{
  /**
   * The cached value of the '{@link #getTypes() <em>Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypes()
   * @generated
   * @ordered
   */
  protected EList<UserTypeDeclaration> types;

  /**
   * The cached value of the '{@link #getConsts() <em>Consts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConsts()
   * @generated
   * @ordered
   */
  protected EList<Constant> consts;

  /**
   * The cached value of the '{@link #getVars() <em>Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVars()
   * @generated
   * @ordered
   */
  protected EList<VarDeclaration> vars;

  /**
   * The cached value of the '{@link #getProc() <em>Proc</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProc()
   * @generated
   * @ordered
   */
  protected EList<Procedure> proc;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeclararionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OberonPackage.Literals.DECLARARION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<UserTypeDeclaration> getTypes()
  {
    if (types == null)
    {
      types = new EObjectContainmentEList<UserTypeDeclaration>(UserTypeDeclaration.class, this, OberonPackage.DECLARARION__TYPES);
    }
    return types;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Constant> getConsts()
  {
    if (consts == null)
    {
      consts = new EObjectContainmentEList<Constant>(Constant.class, this, OberonPackage.DECLARARION__CONSTS);
    }
    return consts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VarDeclaration> getVars()
  {
    if (vars == null)
    {
      vars = new EObjectContainmentEList<VarDeclaration>(VarDeclaration.class, this, OberonPackage.DECLARARION__VARS);
    }
    return vars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Procedure> getProc()
  {
    if (proc == null)
    {
      proc = new EObjectContainmentEList<Procedure>(Procedure.class, this, OberonPackage.DECLARARION__PROC);
    }
    return proc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OberonPackage.DECLARARION__TYPES:
        return ((InternalEList<?>)getTypes()).basicRemove(otherEnd, msgs);
      case OberonPackage.DECLARARION__CONSTS:
        return ((InternalEList<?>)getConsts()).basicRemove(otherEnd, msgs);
      case OberonPackage.DECLARARION__VARS:
        return ((InternalEList<?>)getVars()).basicRemove(otherEnd, msgs);
      case OberonPackage.DECLARARION__PROC:
        return ((InternalEList<?>)getProc()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OberonPackage.DECLARARION__TYPES:
        return getTypes();
      case OberonPackage.DECLARARION__CONSTS:
        return getConsts();
      case OberonPackage.DECLARARION__VARS:
        return getVars();
      case OberonPackage.DECLARARION__PROC:
        return getProc();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OberonPackage.DECLARARION__TYPES:
        getTypes().clear();
        getTypes().addAll((Collection<? extends UserTypeDeclaration>)newValue);
        return;
      case OberonPackage.DECLARARION__CONSTS:
        getConsts().clear();
        getConsts().addAll((Collection<? extends Constant>)newValue);
        return;
      case OberonPackage.DECLARARION__VARS:
        getVars().clear();
        getVars().addAll((Collection<? extends VarDeclaration>)newValue);
        return;
      case OberonPackage.DECLARARION__PROC:
        getProc().clear();
        getProc().addAll((Collection<? extends Procedure>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OberonPackage.DECLARARION__TYPES:
        getTypes().clear();
        return;
      case OberonPackage.DECLARARION__CONSTS:
        getConsts().clear();
        return;
      case OberonPackage.DECLARARION__VARS:
        getVars().clear();
        return;
      case OberonPackage.DECLARARION__PROC:
        getProc().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OberonPackage.DECLARARION__TYPES:
        return types != null && !types.isEmpty();
      case OberonPackage.DECLARARION__CONSTS:
        return consts != null && !consts.isEmpty();
      case OberonPackage.DECLARARION__VARS:
        return vars != null && !vars.isEmpty();
      case OberonPackage.DECLARARION__PROC:
        return proc != null && !proc.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //DeclararionImpl
