/**
 * generated by Xtext 2.25.0
 */
package br.unb.cic.obron.ide.oberon.impl;

import br.unb.cic.obron.ide.oberon.OberonPackage;
import br.unb.cic.obron.ide.oberon.OberonType;
import br.unb.cic.obron.ide.oberon.UserTypeDeclaration;
import br.unb.cic.obron.ide.oberon.VarDeclaration;

import java.lang.Integer;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>User Type Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.unb.cic.obron.ide.oberon.impl.UserTypeDeclarationImpl#getNameType <em>Name Type</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.impl.UserTypeDeclarationImpl#getLength <em>Length</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.impl.UserTypeDeclarationImpl#getVartype <em>Vartype</em>}</li>
 *   <li>{@link br.unb.cic.obron.ide.oberon.impl.UserTypeDeclarationImpl#getVars <em>Vars</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UserTypeDeclarationImpl extends MinimalEObjectImpl.Container implements UserTypeDeclaration
{
  /**
   * The default value of the '{@link #getNameType() <em>Name Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameType()
   * @generated
   * @ordered
   */
  protected static final String NAME_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNameType() <em>Name Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameType()
   * @generated
   * @ordered
   */
  protected String nameType = NAME_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getLength() <em>Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLength()
   * @generated
   * @ordered
   */
  protected static final int LENGTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLength() <em>Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLength()
   * @generated
   * @ordered
   */
  protected int length = LENGTH_EDEFAULT;

  /**
   * The cached value of the '{@link #getVartype() <em>Vartype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVartype()
   * @generated
   * @ordered
   */
  protected OberonType vartype;

  /**
   * The cached value of the '{@link #getVars() <em>Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVars()
   * @generated
   * @ordered
   */
  protected EList<VarDeclaration> vars;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UserTypeDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OberonPackage.Literals.USER_TYPE_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNameType()
  {
    return nameType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNameType(String newNameType)
  {
    String oldNameType = nameType;
    nameType = newNameType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OberonPackage.USER_TYPE_DECLARATION__NAME_TYPE, oldNameType, nameType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getLength()
  {
    return length;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLength(int newLength)
  {
    int oldLength = length;
    length = newLength;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OberonPackage.USER_TYPE_DECLARATION__LENGTH, oldLength, length));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OberonType getVartype()
  {
    return vartype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVartype(OberonType newVartype, NotificationChain msgs)
  {
    OberonType oldVartype = vartype;
    vartype = newVartype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OberonPackage.USER_TYPE_DECLARATION__VARTYPE, oldVartype, newVartype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVartype(OberonType newVartype)
  {
    if (newVartype != vartype)
    {
      NotificationChain msgs = null;
      if (vartype != null)
        msgs = ((InternalEObject)vartype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OberonPackage.USER_TYPE_DECLARATION__VARTYPE, null, msgs);
      if (newVartype != null)
        msgs = ((InternalEObject)newVartype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OberonPackage.USER_TYPE_DECLARATION__VARTYPE, null, msgs);
      msgs = basicSetVartype(newVartype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OberonPackage.USER_TYPE_DECLARATION__VARTYPE, newVartype, newVartype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VarDeclaration> getVars()
  {
    if (vars == null)
    {
      vars = new EObjectContainmentEList<VarDeclaration>(VarDeclaration.class, this, OberonPackage.USER_TYPE_DECLARATION__VARS);
    }
    return vars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OberonPackage.USER_TYPE_DECLARATION__VARTYPE:
        return basicSetVartype(null, msgs);
      case OberonPackage.USER_TYPE_DECLARATION__VARS:
        return ((InternalEList<?>)getVars()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OberonPackage.USER_TYPE_DECLARATION__NAME_TYPE:
        return getNameType();
      case OberonPackage.USER_TYPE_DECLARATION__LENGTH:
        return getLength();
      case OberonPackage.USER_TYPE_DECLARATION__VARTYPE:
        return getVartype();
      case OberonPackage.USER_TYPE_DECLARATION__VARS:
        return getVars();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OberonPackage.USER_TYPE_DECLARATION__NAME_TYPE:
        setNameType((String)newValue);
        return;
      case OberonPackage.USER_TYPE_DECLARATION__LENGTH:
        setLength((Integer)newValue);
        return;
      case OberonPackage.USER_TYPE_DECLARATION__VARTYPE:
        setVartype((OberonType)newValue);
        return;
      case OberonPackage.USER_TYPE_DECLARATION__VARS:
        getVars().clear();
        getVars().addAll((Collection<? extends VarDeclaration>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OberonPackage.USER_TYPE_DECLARATION__NAME_TYPE:
        setNameType(NAME_TYPE_EDEFAULT);
        return;
      case OberonPackage.USER_TYPE_DECLARATION__LENGTH:
        setLength(LENGTH_EDEFAULT);
        return;
      case OberonPackage.USER_TYPE_DECLARATION__VARTYPE:
        setVartype((OberonType)null);
        return;
      case OberonPackage.USER_TYPE_DECLARATION__VARS:
        getVars().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OberonPackage.USER_TYPE_DECLARATION__NAME_TYPE:
        return NAME_TYPE_EDEFAULT == null ? nameType != null : !NAME_TYPE_EDEFAULT.equals(nameType);
      case OberonPackage.USER_TYPE_DECLARATION__LENGTH:
        return length != LENGTH_EDEFAULT;
      case OberonPackage.USER_TYPE_DECLARATION__VARTYPE:
        return vartype != null;
      case OberonPackage.USER_TYPE_DECLARATION__VARS:
        return vars != null && !vars.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nameType: ");
    result.append(nameType);
    result.append(", length: ");
    result.append(length);
    result.append(')');
    return result.toString();
  }

} //UserTypeDeclarationImpl
